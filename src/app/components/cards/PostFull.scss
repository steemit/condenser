.Post {
  @include themify($themes) {
    background-color: themed('transparent');
  }
}

.PostFull {
  padding: 2rem 1rem 1rem 1rem;
  position: relative;
  @include themify($themes) {
    border-radius: themed('roundedCorners');
    border: themed('border');
    background-color: themed('moduleBackgroundColor');
  }
  .button.hollow {
    @include themify($themes) {
      border: themed('borderAccent');
      color: themed('textColorAccent');
    }
  }

  .ReplyEditor {
    margin-top: 1rem;
  }
}

.PostFull__time_author_category {
  font-weight: 400;
  border-right: none!important;
  display: block;
  @include MQ(M) {
    display: inline;
  }
  @include themify($themes) {
    border-right: themed('border');
    color: themed('textColorSecondary');
  }

  padding-right: .6rem;
  margin-right: .6rem;
  > span {
    white-space: nowrap;
  }
}

.PostFull__time_author_category_large {
  margin: 1rem 0 1rem 0;
  line-height: 1.2;
  @include themify($themes) {
    color: themed('textColorSecondary');
  }
  strong, a {
    @include themify($themes) {
      color: themed('textColorSecondary');
    }
  }
  font-size: 120%;
  display: flex;
  align-items: center;
  > .Userpic {
    margin-top: -4px;
    float: left;
  }
  > .right-side {
    margin-left: 12px;
    position: relative;
    top: -2px;
    @media only screen and (max-width: 450px) {
        .Author__container {
            left: -62px;
        }
    }
  }
}

.PostFull__header, .PostFull__body {
  max-width: 40rem;
  margin: 0 auto;
}

.PostFull__header {
  @include themify($themes) {
    border-bottom: themed('border');
  }
  > h1 {
    overflow: hidden;
    overflow-wrap: break-word;
    font-family: $body-font-family;
    font-size: 240%;
    font-weight: 800;
    line-height: 1.1;
    .Icon {
      margin: 0 0 0 0.5rem;
      vertical-align: -30%;
    }
  }
  a {
    @extend .link;
    @extend .link--secondary;
    font-weight: 600;

  }
  .PostFull__time_author_category {
    border-right: none;
    .Icon.clock {
      top: 5px;
      svg {
        @include themify($themes) {
          fill: themed('textColorSecondary');
        }
      }
    }
  }
}

.PostFull__body {
  overflow: hidden;
  padding: 1rem 0 1rem 0;
  clear: left;
  a {
    @extend .link;
    @extend .link--accent;
  }
}

.PostFull__footer {
  clear: right;
  line-height: 2rem;
  font-size: 94%;
  svg {
    @include themify($themes) {
      fill: themed('textColorSecondary');
    }
  }
  .RightShare__Menu {
    @include MQ(FL) {
      text-align: right;
    }
  }
  span {
    white-space: normal;
  }

  .Reblog__button {
    padding-right: .4rem;
    margin-right: .4rem;
    @include themify($themes) {
      border-right: themed('border');
    }
  }
}

.PostFull__responses {
  padding-right: .4rem;
}

.PostFull__views {
  padding-right: .4rem;
  margin-right: .4rem;
  font-size: 94%;
  font-weight: 600;
  @include themify($themes) {
    border-right: themed('border');
    fill: themed('textColorSecondary');
  }
}

.PostFull__reply {
  padding-right: .4rem;
  margin-right: .4rem;
  @include themify($themes) {
    border-right: themed('border');
  }
  a {margin: 0 0.15rem;}
}

.PostFull__lifetime {
  @include themify($themes) {
    fill: themed('textColorSecondary');
  }
  font-size: 80%;
}

.Author__dropdown {
  padding: 1rem;
  > a {
    @include hoverUnderline;
  }
}

.explore-post {
  margin-right: 0px!important;
  cursor: pointer;
  &:hover {
    svg {
      fill: $color-teal;
    }
  }
}

input.share-box {
  width: 75%!important;
  display: inline;
}

.ExplorePost {
  span.extlink {
    vertical-align: text-bottom;
  }
  h5 {
    margin-top: 1em;
  }
  .ExplorePost__copy-button {
    cursor: pointer;
  }
}

.chain-right {
  -webkit-transform: rotate(120deg);
  -moz-transform: rotate(120deg);
  -ms-transform: rotate(120deg);
  -o-transform: rotate(120deg);
  transform: rotate(120deg);
}

/* Small only */
@media screen and (max-width: 39.9375em) {
  .Post {
    width: 100%;
  }
  .PostFull__footer > .column {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 100%;
    flex: 0 0 100%;
  }
  input.share-box {
    height: 2.8em;
    font-size: .8em;
  }
}

/* Medium only */
@media screen and (min-width: 40em) and (max-width: 63.9375em) {
  input.share-box {
    height: 2.8em;
    font-size: .8em;
  }
}

.modelImageLoading {
  background-image: url('../images/loading.gif');
  background-position: center 1em;
  background-repeat: no-repeat;
  background-size: 60px 60px;
}

.reveal:has(div.modalImageContainer) {
  height: auto;
  min-height: unset;
  width: auto;
  display: inline-block;
  text-align: center;
  overflow: hidden;
  top: 1em;
  padding: 0;
  @include MQ(M) {
    width: var(--onload-width, 0);
    max-width: unset;
    height: var(--onload-height);
  }
}

.modalImageContainer {
  position: relative;
  max-height: 70vh;
  overflow: auto;
  display: inline-block;
  text-align: center;
  @include MQ(M) {
    max-height: unset;
    overflow: hidden;
    height: 100%;
  }
  width: 100%;
}

.modalImageContainer:has(.modalImage.zoomed) {
  @include MQ(M) {
    overflow: scroll;
    max-height: calc(var(--original-height) * 1px);
  }
}

.modalImage {
  user-select: none;
  width: 100%;
  max-width: unset;
  display: block;
  margin: 0 auto;
}

.modalImage.zoomed {
  width: calc(var(--original-width) * var(--zoom-level, 1) * 1px);
  @include MQ(M) {
    height: calc(var(--original-height) * var(--zoom-level, 1) * 1px);
  }
}

.modalImageOptions {
  display: flex;
  justify-content: center;
  gap: 1em;
  padding: 0em 1em;
  padding-top: 7px;
  @include MQ(M) {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding-bottom: 0.5em;
  }
}

.modalImageOptions .modalImageZoomIn:hover,
.modalImageOptions .modalImageZoomOut:hover,
.modalImageOptions .modalImageResetZoom:hover {
  @include themify($themes) {
      color: themed('textColorAccent');
  }
}

.modalImageOptions .modalImageZoomIn .Icon > svg,
.modalImageOptions .modalImageZoomOut .Icon > svg,
.modalImageOptions .modalImageResetZoom .Icon > svg {
  cursor: pointer;
  transition: fill 0.2s ease-in-out;
  border-radius: 50%;
  padding: 0.3rem;
  @include themify($themes) {
    background-color: themed('modalButtonDefault');
    fill: themed('modalButtonIcon');
  } 
  &:hover, &:focus {
    @include themify($themes) {
      background-color: themed('modalButtonHover');
      fill: themed('modalButtonIcon');  
    } 
  }
}